Traceback (most recent call last):
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wingho\miniforge3\envs\main\Lib\asyncio\base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\wingho\miniforge3\envs\main\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# generate a new dataframe

df = pd.DataFrame(
    {
        "A": [1, 2, 3, 4],
        "B": ["this", "that", "here", "there"],
        "C": [1.3, 2.4, 7.5, 8.1]
    }, index=["2017", "2018", "2019", "2020"]
)

# export to a csv file named "new_data.csv"
# NOTE: the output folder needs to already exist
df.to_csv("output/new_data.csv")
------------------


[31m---------------------------------------------------------------------------[39m
[31mOSError[39m                                   Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[16][39m[32m, line 13[39m
[32m      3[39m df = pd.DataFrame(
[32m      4[39m     {
[32m      5[39m         [33m"[39m[33mA[39m[33m"[39m: [[32m1[39m, [32m2[39m, [32m3[39m, [32m4[39m],
[32m   (...)[39m[32m      8[39m     }, index=[[33m"[39m[33m2017[39m[33m"[39m, [33m"[39m[33m2018[39m[33m"[39m, [33m"[39m[33m2019[39m[33m"[39m, [33m"[39m[33m2020[39m[33m"[39m]
[32m      9[39m )
[32m     11[39m [38;5;66;03m# export to a csv file named "new_data.csv"[39;00m
[32m     12[39m [38;5;66;03m# NOTE: the output folder needs to already exist[39;00m
[32m---> [39m[32m13[39m [43mdf[49m[43m.[49m[43mto_csv[49m[43m([49m[33;43m"[39;49m[33;43moutput/new_data.csv[39;49m[33;43m"[39;49m[43m)[49m

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\util\_decorators.py:333[39m, in [36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    327[39m [38;5;28;01mif[39;00m [38;5;28mlen[39m(args) > num_allow_args:
[32m    328[39m     warnings.warn(
[32m    329[39m         msg.format(arguments=_format_argument_list(allow_args)),
[32m    330[39m         [38;5;167;01mFutureWarning[39;00m,
[32m    331[39m         stacklevel=find_stack_level(),
[32m    332[39m     )
[32m--> [39m[32m333[39m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\core\generic.py:3967[39m, in [36mNDFrame.to_csv[39m[34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)[39m
[32m   3956[39m df = [38;5;28mself[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m, ABCDataFrame) [38;5;28;01melse[39;00m [38;5;28mself[39m.to_frame()
[32m   3958[39m formatter = DataFrameFormatter(
[32m   3959[39m     frame=df,
[32m   3960[39m     header=header,
[32m   (...)[39m[32m   3964[39m     decimal=decimal,
[32m   3965[39m )
[32m-> [39m[32m3967[39m [38;5;28;01mreturn[39;00m [43mDataFrameRenderer[49m[43m([49m[43mformatter[49m[43m)[49m[43m.[49m[43mto_csv[49m[43m([49m
[32m   3968[39m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[32m   3969[39m [43m    [49m[43mlineterminator[49m[43m=[49m[43mlineterminator[49m[43m,[49m
[32m   3970[39m [43m    [49m[43msep[49m[43m=[49m[43msep[49m[43m,[49m
[32m   3971[39m [43m    [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m
[32m   3972[39m [43m    [49m[43merrors[49m[43m=[49m[43merrors[49m[43m,[49m
[32m   3973[39m [43m    [49m[43mcompression[49m[43m=[49m[43mcompression[49m[43m,[49m
[32m   3974[39m [43m    [49m[43mquoting[49m[43m=[49m[43mquoting[49m[43m,[49m
[32m   3975[39m [43m    [49m[43mcolumns[49m[43m=[49m[43mcolumns[49m[43m,[49m
[32m   3976[39m [43m    [49m[43mindex_label[49m[43m=[49m[43mindex_label[49m[43m,[49m
[32m   3977[39m [43m    [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   3978[39m [43m    [49m[43mchunksize[49m[43m=[49m[43mchunksize[49m[43m,[49m
[32m   3979[39m [43m    [49m[43mquotechar[49m[43m=[49m[43mquotechar[49m[43m,[49m
[32m   3980[39m [43m    [49m[43mdate_format[49m[43m=[49m[43mdate_format[49m[43m,[49m
[32m   3981[39m [43m    [49m[43mdoublequote[49m[43m=[49m[43mdoublequote[49m[43m,[49m
[32m   3982[39m [43m    [49m[43mescapechar[49m[43m=[49m[43mescapechar[49m[43m,[49m
[32m   3983[39m [43m    [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m   3984[39m [43m[49m[43m)[49m

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\io\formats\format.py:1014[39m, in [36mDataFrameRenderer.to_csv[39m[34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)[39m
[32m    993[39m     created_buffer = [38;5;28;01mFalse[39;00m
[32m    995[39m csv_formatter = CSVFormatter(
[32m    996[39m     path_or_buf=path_or_buf,
[32m    997[39m     lineterminator=lineterminator,
[32m   (...)[39m[32m   1012[39m     formatter=[38;5;28mself[39m.fmt,
[32m   1013[39m )
[32m-> [39m[32m1014[39m [43mcsv_formatter[49m[43m.[49m[43msave[49m[43m([49m[43m)[49m
[32m   1016[39m [38;5;28;01mif[39;00m created_buffer:
[32m   1017[39m     [38;5;28;01massert[39;00m [38;5;28misinstance[39m(path_or_buf, StringIO)

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\io\formats\csvs.py:251[39m, in [36mCSVFormatter.save[39m[34m(self)[39m
[32m    247[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    248[39m [33;03mCreate the writer & save.[39;00m
[32m    249[39m [33;03m"""[39;00m
[32m    250[39m [38;5;66;03m# apply compression and byte/text conversion[39;00m
[32m--> [39m[32m251[39m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[32m    252[39m [43m    [49m[38;5;28;43mself[39;49m[43m.[49m[43mfilepath_or_buffer[49m[43m,[49m
[32m    253[39m [43m    [49m[38;5;28;43mself[39;49m[43m.[49m[43mmode[49m[43m,[49m
[32m    254[39m [43m    [49m[43mencoding[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mencoding[49m[43m,[49m
[32m    255[39m [43m    [49m[43merrors[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43merrors[49m[43m,[49m
[32m    256[39m [43m    [49m[43mcompression[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mcompression[49m[43m,[49m
[32m    257[39m [43m    [49m[43mstorage_options[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mstorage_options[49m[43m,[49m
[32m    258[39m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handles:
[32m    259[39m     [38;5;66;03m# Note: self.encoding is irrelevant here[39;00m
[32m    260[39m     [38;5;28mself[39m.writer = csvlib.writer(
[32m    261[39m         handles.handle,
[32m    262[39m         lineterminator=[38;5;28mself[39m.lineterminator,
[32m   (...)[39m[32m    267[39m         quotechar=[38;5;28mself[39m.quotechar,
[32m    268[39m     )
[32m    270[39m     [38;5;28mself[39m._save()

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\io\common.py:749[39m, in [36mget_handle[39m[34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[39m
[32m    747[39m [38;5;66;03m# Only for write methods[39;00m
[32m    748[39m [38;5;28;01mif[39;00m [33m"[39m[33mr[39m[33m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode [38;5;129;01mand[39;00m is_path:
[32m--> [39m[32m749[39m     [43mcheck_parent_directory[49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43mhandle[49m[43m)[49m[43m)[49m
[32m    751[39m [38;5;28;01mif[39;00m compression:
[32m    752[39m     [38;5;28;01mif[39;00m compression != [33m"[39m[33mzstd[39m[33m"[39m:
[32m    753[39m         [38;5;66;03m# compression libraries do not like an explicit text-mode[39;00m

[36mFile [39m[32m~\miniforge3\envs\main\Lib\site-packages\pandas\io\common.py:616[39m, in [36mcheck_parent_directory[39m[34m(path)[39m
[32m    614[39m parent = Path(path).parent
[32m    615[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m parent.is_dir():
[32m--> [39m[32m616[39m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([33mrf[39m[33m"[39m[33mCannot save file into a non-existent directory: [39m[33m'[39m[38;5;132;01m{[39;00mparent[38;5;132;01m}[39;00m[33m'[39m[33m"[39m)

[31mOSError[39m: Cannot save file into a non-existent directory: 'output'

